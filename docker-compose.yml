services:

  user_service:
    container_name: shop_user_service
    build:
      context: .
      dockerfile: shop_user_service/Dockerfile
    environment:
      - DJANGO_SETTINGS_MODULE=shop_user_service.settings
    env_file:
      - .env
    volumes:
      - ./shop_user_service/:/app/
    command: >
      sh -c "python manage.py makemigrations &&
             python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000 "
    ports:
      - "8000:8000"
    networks:
      - my_network
    depends_on:
      - user_service_db  
    links:
      - user_service_db  

  product_service:
    container_name: shop_product_service
    build:
      context: .
      dockerfile: shop_product_service/Dockerfile
    environment:
      - DJANGO_SETTINGS_MODULE=shop_product_service.settings  
    env_file:
      - .env  
    volumes:
      - ./shop_product_service/:/app/
    command: >
      sh -c "python manage.py makemigrations &&
             python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000 "
    ports:
      - "8001:8000"
    networks:
      - my_network
    depends_on:
      - user_service
      - product_service_db
    links:
      - product_service_db    
      
  order_service:
    container_name: shop_order_service
    build:
      context: .
      dockerfile: shop_order_service/Dockerfile
    environment:
      - DJANGO_SETTINGS_MODULE=shop_order_service.settings
    env_file:
      - .env
    volumes:
      - ./shop_order_service/:/app/
    command: >
      sh -c "python manage.py makemigrations &&
             python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000 "
    ports:
      - "8002:8000"
    networks:
      - my_network
    depends_on:
      - user_service
      - product_service
      - order_service_db
    links:
      - order_service_db 

  payment_service:
    container_name: shop_payment_service
    build:
      context: .
      dockerfile: shop_payment_service/Dockerfile
    environment:
      - DJANGO_SETTINGS_MODULE=shop_payment_service.settings
    env_file:
      - .env
    volumes:
      - ./shop_payment_service/:/app/
    command: >
      sh -c "python manage.py makemigrations &&
             python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000 "
    ports:
      - "8003:8000"
    networks:
      - my_network
    links:
      - payment_service_db   
    depends_on:
      - payment_service_db

  user_service_db:
    image: mysql:8.0
    container_name: user_service_db
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE_USER}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    command: --default-authentication-plugin=mysql_native_password  
    ports:
      - "3306:3306"
    networks:
      - my_network

  product_service_db:
    image: mysql:8.0
    container_name: product_service_db
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE_PRODUCT}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    command: --default-authentication-plugin=mysql_native_password  
    ports:
      - "3307:3306"
    networks:
      - my_network

  payment_service_db:
    image: mysql:8.0
    container_name: payment_service_db
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE_PAYMENT}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    command: --default-authentication-plugin=mysql_native_password  
    ports:
      - "3308:3306"
    networks:
      - my_network   

  order_service_db:
    image: mysql:8.0
    container_name: order_service_db
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE_ORDER}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    command: --default-authentication-plugin=mysql_native_password  
    ports:
      - "3309:3306"
    networks:
      - my_network              

networks:
  my_network:
    driver: bridge