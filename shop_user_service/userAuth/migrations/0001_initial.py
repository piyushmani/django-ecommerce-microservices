# Generated by Django 4.2.13 on 2024-07-06 08:12

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.IntegerField(null=True)),
                ('updated', models.DateTimeField(auto_now=True, null=True)),
                ('updated_by', models.IntegerField(null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(default=None, null=True)),
                ('deleted_by', models.IntegerField(null=True)),
                ('first_name', models.CharField(help_text='First name of  user', max_length=100, null=True, verbose_name='First Name')),
                ('last_name', models.CharField(help_text='Last name of  user', max_length=100, null=True, verbose_name='Last Name')),
                ('email', models.EmailField(help_text='Email of  user', max_length=100, unique=True, verbose_name='User email')),
                ('phone_number', models.CharField(help_text='Phone of user', max_length=50, null=True, verbose_name='Phone user')),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female'), ('Other', 'Other')], help_text='Sex of User', max_length=100, null=True, verbose_name='User sex')),
                ('bvn', models.CharField(max_length=100, null=True, verbose_name='BVN')),
                ('birthday', models.DateField(help_text='Birthday of user', null=True, verbose_name='Birthday')),
                ('status', models.CharField(choices=[('Active', 'Active'), ('Deleted', 'Deleted'), ('suspended', 'suspended'), ('Blocked', 'Blocked'), ('restricted', 'restricted')], default='Active', help_text='User status', max_length=100, verbose_name='User status')),
                ('last_login', models.DateTimeField(auto_now_add=True, help_text='Last login', verbose_name='Last login')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'ordering': ['first_name', 'last_name'],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
